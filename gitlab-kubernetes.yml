- hosts: master
  become: yes
  tasks:
    - name: Get kubernetes deployment URL
      shell: |
        kubectl --kubeconfig /home/spencer/.kube/config cluster-info | grep 'Kubernetes master' | awk '/http/ {print $NF}'
      register: depurl
    - debug: var=depurl.stdout_lines

    - name: Get kubernetes ca.crt
      shell: |
        kubectl --kubeconfig /home/spencer/.kube/config get secret \
        $(kubectl --kubeconfig /home/spencer/.kube/config get secrets | \
        grep default-token | awk '{print $1}') -o jsonpath="{['data']['ca\.crt']}" | \
        base64 --decode
      register: cacrt
    - debug: var=cacrt.stdout_lines

    - name: Write gitlab-admin-service-account
      copy:
        dest: gitlab-admin-service-account.yaml
        content: |
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: gitlab-admin
            namespace: kube-system
          ---
          apiVersion: rbac.authorization.k8s.io/v1beta1
          kind: ClusterRoleBinding
          metadata:
            name: gitlab-admin
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
          - kind: ServiceAccount
            name: gitlab-admin
            namespace: kube-system

    - name: Apply gitlab-admin-service-account
      shell: kubectl apply --kubeconfig /home/spencer/.kube/config -f gitlab-admin-service-account.yaml

    - name: Get gitlab-admin secret
      shell: |
        kubectl --kubeconfig /home/spencer/.kube/config -n kube-system describe secret \
        $(kubectl --kubeconfig /home/spencer/.kube/config -n kube-system get secret | \
        grep gitlab-admin | awk '{print $1}')
      register: sectoken
    - debug: var=sectoken.stdout_lines